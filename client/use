"use client";
import AddToCart from "@/components/ui/AddToCart";
import React, { useState } from "react";
import { IoIosStar, IoIosStarHalf } from "react-icons/io";

  function groupAttributes (variants:TVariant[]): Record<string, Set<string>>{
  return colorVariants
  .reduce((acc, variant) => {
    for (const { name, value } of variant.attributes) {
      if (!acc[name]) {
        acc[name] = new Set<string>();
      }
      acc[name].add(value);
    }
    return acc;
  }, {} as Record<string, Set<string>>);
  }

  
const variants = [
  {
    id: "ckv123abc456",
    productId: "prod001",
    sku: "GG-001-BLK",
    colorName: "Black",
    colorCode: "#000000",
    attributes: [
      { name: "Size", value: "M" },
      { name: "Material", value: "Cotton" },
      { name: "Origin", value: "China" },
      {
        name: "Storage",
        value: "128GB",
      },
    ],
    salePrice: 49.99,
    regularPrice: 59.99,
    discountPercentage: 17,
    stock: 25,
  },
  {
    id: "ckv789def012",
    productId: "prod002",
    sku: "GG-002-WHT",
    colorName: "White",
    colorCode: "#FFFFFF",
    attributes: [
      { name: "Size", value: "L" },
      { name: "Material", value: "Polyester" },
      { name: "Origin", value: "China" },
      {
        name: "Storage",
        value: "256GB",
      },
      {
      name:"Ram",
      value:"12GB"
      }
    ],
    salePrice: 39.99,
    regularPrice: 49.99,
    discountPercentage: 20,
    stock: 18,
  },
  {
    id: "ckv789def012",
    productId: "prod002",
    sku: "GG-002-WHT",
    colorName: "White",
    colorCode: "#FFFFFF",
    attributes: [
      { name: "Size", value: "X" },
      { name: "Origin", value: "Global" },
      {
        name: "Storage",
        value: "64GB",
      },
    ],

    salePrice: 39.99,
    regularPrice: 49.99,
    discountPercentage: 20,
    stock: 18,
    isFeatured: true,
  },
  {
    id: "ckv789def012",
    productId: "prod002",
    sku: "GG-002-WHT",
    colorName: "White",
    colorCode: "#FFFFFF",
    attributes: [
      { name: "Size", value: "L" },
      { name: "Material", value: "Polyester" },
      { name: "Origin", value: "China" },
      {
        name: "Storage",
        value: "356GB",
      },
    ],
    salePrice: 39.99,
    regularPrice: 49.99,
    discountPercentage: 20,
    stock: 18,
    isFeatured: true,
  },
  {
    id: "ckv345ghi678",
    productId: "prod003",
    sku: "GG-003-RED",
    colorName: "Red",
    colorCode: "#FF0000",
    attributes: [
      { name: "Size", value: "S" },
      { name: "Material", value: "Wool" },
    ],
    salePrice: 69.99,
    regularPrice: 79.99,
    discountPercentage: 13,
    stock: 10,
  },
  {
    id: "ckv901jkl234",
    productId: "prod004",
    sku: "GG-004-BLU",
    colorName: "Blue",
    colorCode: "#0000FF",
    attributes: [
      { name: "Size", value: "XL" },
      { name: "Material", value: "Denim" },
    ],
    salePrice: 89.99,
    regularPrice: 99.99,
    discountPercentage: 10,
    stock: 5,
  },
];

const ProductBasicInfo = () => {
  const colors = Array.from(
    new Map(
      variants.map(({ colorName, colorCode }) => [colorName, { colorName, colorCode }]),
    ).values(),
  );

  const featuredVariant = variants.find((v) => v.isFeatured) || variants[0];
  const featuredVariantsAttributes = featuredVariant.attributes.reduce(
    (p, c) => {
      p[c.name] = c.value;
      return p;
    },
    {} as Record<string, string>,
  );

  const [selectedColorName, setSelectedColorName] = useState(featuredVariant.colorName);
  const [selectedAttributes, setSelectedAttributes] = useState<Record<string, string>>(
    featuredVariantsAttributes || {},
  );

  const attributes = variants.reduce(
    (acc, v) => {
      if (v.colorName === selectedColorName) {
        v.attributes.forEach(({ name, value }) => {
          if (!acc[name]) acc[name] = new Set();
          acc[name].add(value);
        });
      }
      return acc;
    },
    {} as Record<string, Set<string>>,
  );

  const attributeEntries = Object.entries(attributes).map(([name, values]) => ({
    name,
    values: Array.from(values),
  }));

  const handleSelectAttributes = (name: string, value: string) => {
    setSelectedAttributes((prev) => ({ ...prev, [name]: value }));
  };

  const handelColorChange = (colorName: string) => {
    setSelectedColorName(colorName);
    setSelectedAttributes({});
  };
  const getVariant = () => {
    const colorVariants = variants.filter((item) => item.colorName === selectedColorName);

    const selectedAttArray = Object.entries(selectedAttributes).map(([name, value]) => ({
      name,
      value,
    }));

    const foundVariant = colorVariants.find((variant) =>
      selectedAttArray.every((att) =>
        variant.attributes.some((vAtt) => vAtt.name === att.name && vAtt.value === att.value),
      ),
    );
    return foundVariant;
  };
  console.log(getVariant())
  
  return (
    <div className="p-5  bg-white  ">
      <div>
        <p className="text-end font-medium">
          <span className="text-primary ">SKU</span>: 6T6GFYUT
        </p>
        <p className="text-info ">Out of stock</p>
        <h1 className="md:text-3xl text-2xl font-primary text-black  ">
          Lorem ipsum dolor sit amet consectetur, adipisicing elit.
        </h1>
      </div>
      <div className="mt-3 space-y-2">
        <h5 className="md:text-4xl text-3xl text-primary font-semibold font-primary">
          $24.88 <del className="text-2xl text-gray-700">$40</del>
        </h5>

        <div className="flex items-center gap-2">
          <div className=" text-info flex items-center gap-1">
            <span>
              <IoIosStar />
            </span>
            <span>
              <IoIosStar />
            </span>
            <span>
              <IoIosStar />
            </span>
            <span>
              <IoIosStar />
            </span>
            <span>
              <IoIosStarHalf />
            </span>
          </div>
          <p className="text-gray-400 text-sm">(03)</p>
        </div>
        <p className="text-sm text-gray-800/80">
          Lorem ipsum dolor sit amet consectetur adipisicing elit. Mollitia, quod sunt ipsa
          accusantium accusamus fuga ex ut numquam repellendus aliquam!
        </p>
      </div>
      <div className="mt-3 ">
        <form>
          <div className="space-y-4">
            <div className="flex items-center gap-5">
              <h6 className="font-semibold opacity-90">Color:</h6>
              <div className="mt-2 flex items-center gap-2">
                {colors.map(({ colorName, colorCode }) => (
                  <button
                    key={colorCode}
                    type="button"
                    onClick={() => handelColorChange(colorName)}
                
                    className={`size-7 rounded-full p-2 border border-gray-900/40 ${selectedColorName === colorName ? "outline-info outline-2 outline-offset-2" : ""}`}
                    style={{ backgroundColor: colorCode }}
                  />
                ))}
              </div>
            </div>
            {attributeEntries.map(({ name, values }) => (
              <div key={name} className="flex md:flex-row flex-col  md:gap-5 gap-3">

                <h6 className="font-semibold opacity-90">{name}:</h6>
                <div className="flex items-center gap-2 flex-wrap">
                  {values.map((value, index) => {
                    const isChecked =
                      (Object.values(selectedAttributes).length &&
                        Object.keys(selectedAttributes).includes(name) &&
                        selectedAttributes[name] === value) ||
                      (!Object.keys(selectedAttributes).includes(name) && index === 0);
console.log(11,variants.find(item=>item.attributes.some(val=>val.name === name && val.value === value)) === undefined)
                    return (
                      <button
                        key={value}
                        disabled={!variants.find(item=>item.attributes.some(val=>val.name === name && val.value === value))}
                        type="button"
                        onClick={() => handleSelectAttributes(name, value)}
                        className={`md:px-6 px-4  py-2 rounded-md md:text-[1rem] text-sm border-blue-100 ${isChecked ? "bg-secondary" : "bg-gray-100"} `}
                      >
                        {value}
                        <input
                          type="radio"
                          className="hidden"
                          name={name}
                          value={value}
                          checked={isChecked}
                          onChange={() => {}}
                        />
                      </button>
                    );
                  })}
                </div>
              </div>
            ))}
          </div>
        </form>
      </div>
      <div className="mt-3">
        <AddToCart />
      </div>
      <p className="mt-3 font-secondary text-info text-sm">
        ঢাকার বাহীরের অর্ডারের ক্ষেত্রে ৩০০ টাকা 01888 719 119 বিকাশ মার্চেন্ট নাম্বারে Make Payment
        করে অর্ডার নিশ্চিত করুন ।অন্যথায় অর্ডার ক্যান্সেল হয়ে যাবে ।
      </p>
    </div>
  );
};

export default ProductBasicInfo;
